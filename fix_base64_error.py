#!/usr/bin/env python3
"""
Corrige o erro da vari√°vel base64 nos m√©todos gTTS e pyttsx3
"""

import os
import sys

def fix_base64_import_error():
    """Corrige o erro de importa√ß√£o do base64"""
    print("üîß CORRIGINDO ERRO DA VARI√ÅVEL BASE64")
    print("=" * 50)
    
    # Ler o arquivo atual
    file_path = "backend/main_enhanced.py"
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        print(f"‚úÖ Arquivo lido: {file_path}")
        
        # Corre√ß√µes necess√°rias
        corrections = [
            {
                "description": "Adicionar import base64 no m√©todo gTTS",
                "old": """            try:
                import io
                from gtts import gTTS""",
                "new": """            try:
                import io
                import base64
                from gtts import gTTS"""
            },
            {
                "description": "Adicionar import base64 no m√©todo pyttsx3",
                "old": """            # Generate audio to temporary file
            import tempfile""",
                "new": """            # Generate audio to temporary file
            import tempfile
            import base64"""
            }
        ]
        
        # Aplicar corre√ß√µes
        modified = False
        for correction in corrections:
            if correction["old"] in content:
                content = content.replace(correction["old"], correction["new"])
                print(f"‚úÖ {correction['description']}")
                modified = True
            else:
                print(f"‚ö†Ô∏è {correction['description']} - padr√£o n√£o encontrado")
        
        if modified:
            # Salvar arquivo corrigido
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print("‚úÖ Arquivo corrigido e salvo")
            return True
        else:
            print("‚ö†Ô∏è Nenhuma corre√ß√£o foi aplicada")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao corrigir arquivo: {e}")
        return False

def test_server_startup():
    """Testa se o servidor inicia sem erros"""
    print("\nüß™ TESTANDO INICIALIZA√á√ÉO DO SERVIDOR")
    print("=" * 50)
    
    try:
        # Configurar ambiente
        os.environ["COQUI_TOS_AGREED"] = "1"
        os.environ["COQUI_TTS_NO_MECAB"] = "1"
        os.environ["PYTHONWARNINGS"] = "ignore"
        
        # Tentar importar o m√≥dulo principal
        sys.path.append('backend')
        from main_enhanced import TTSService
        
        print("‚úÖ M√≥dulo main_enhanced importado com sucesso")
        
        # Tentar criar inst√¢ncia do servi√ßo
        tts_service = TTSService()
        print("‚úÖ TTSService inicializado com sucesso")
        
        # Verificar se os m√©todos est√£o funcionando
        if hasattr(tts_service, 'synthesize_speech'):
            print("‚úÖ M√©todo synthesize_speech dispon√≠vel")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro na inicializa√ß√£o: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üîß CORRE√á√ÉO DO ERRO BASE64 NO SERVIDOR")
    print("Corrigindo imports faltantes nos m√©todos gTTS e pyttsx3")
    print("=" * 60)
    
    # 1. Corrigir erro de importa√ß√£o base64
    fix_ok = fix_base64_import_error()
    
    # 2. Testar inicializa√ß√£o do servidor
    test_ok = test_server_startup()
    
    print("\n" + "=" * 60)
    print("üìä RESULTADO FINAL")
    print("=" * 60)
    
    if fix_ok and test_ok:
        print("üéâ CORRE√á√ÉO APLICADA COM SUCESSO!")
        print("‚úÖ Erro da vari√°vel base64 corrigido")
        print("‚úÖ Servidor inicializa sem problemas")
        print("‚úÖ M√©todos gTTS e pyttsx3 funcionais")
        
        print("\nüöÄ PR√ìXIMOS PASSOS:")
        print("1. Reinicie o servidor no ambiente virtual")
        print("2. Teste a gera√ß√£o de √°udio")
        print("3. N√£o deve mais aparecer erro de base64")
        
        return True
    else:
        print("‚ùå AINDA H√Å PROBLEMAS")
        
        if not fix_ok:
            print("‚Ä¢ N√£o foi poss√≠vel corrigir o arquivo")
        if not test_ok:
            print("‚Ä¢ Servidor ainda tem problemas de inicializa√ß√£o")
        
        return False

if __name__ == "__main__":
    success = main()
    
    if success:
        print("\nüéâ CORRE√á√ÉO BASE64 CONCLU√çDA!")
    else:
        print("\n‚ùå CORRE√á√ÉO FALHOU - VERIFIQUE OS PROBLEMAS ACIMA")